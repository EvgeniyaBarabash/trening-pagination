{"version":3,"sources":["js/refs.js","js/class.js","js/classicFetch.js","index.js"],"names":["loadMoreBtn","document","getElementById","list","form","FetchObject","constructor","BASE_URL","ednPoint","options","_query","_page","perPage","query","value","page","generateMarkup","array","map","elem","photographer","src","tiny","original","join","getFetch","listRef","params","url","fetch","then","response","json","data","photos","result","insertAdjacentHTML","console","log","catch","err","getFetchBySubmit","formRef","addEventListener","e","preventDefault","dir","target","elements","input","innerHTML","disabled","alert","reset","getFetchByClick","btnRef","refs","API_KEY","headers","Authorization","myFetch"],"mappings":";;;AACe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACXA,YAAaC,SAASC,eAAe,YACrCC,KAAMF,SAASC,eAAe,QAC9BE,KAAMH,SAASC,eAAe,SAHnB,QAAA,QAAA;;ACDkB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAlB,MAAMG,EACjBC,YAAYC,EAAUC,EAAUC,GACzBF,KAAAA,SAAWA,EACXC,KAAAA,SAAWA,EACXC,KAAAA,QAAUA,EACVC,KAAAA,OAAS,GACTC,KAAAA,MAAQ,EACRC,KAAAA,QAAU,EAEbC,YACK,OAAA,KAAKH,OAEVG,UAAMC,GACA,OAAA,KAAKJ,OAASI,EAGpBC,WACK,OAAA,KAAKJ,MAEVI,SAAKD,GACC,OAAA,KAAKH,OAASG,EAExBE,eAAeC,GACNA,OAAAA,EACJC,IAAIC,IACG,MAAA,aACJC,EACAC,KAAK,KAAEC,EAAF,SAAQC,IACXJ,EACI,qCAEAG,gBAAmBC,WAAkBH,2BAI9CI,KAAK,IAEVC,SAASC,GACHC,IAAAA,YAAmB,KAAKjB,mBAAmB,KAAKE,gBAAgB,KAAKD,QACrEiB,EAAM,KAAKrB,SAAW,KAAKC,SAAWmB,EAC1CE,MAAMD,EAAK,KAAKnB,SACbqB,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,GAAQA,EAAKC,QAClBJ,KAAKb,IACAkB,IAAAA,EAAS,KAAKnB,eAAeC,GACjCS,EAAQU,mBAAmB,YAAaD,GACxCE,QAAQC,IAAIH,KAEbI,MAAMC,IACLH,QAAQC,IAAIE,KAKlBC,iBAAiBC,EAAShB,GACxBgB,EAAQC,iBAAiB,SAAUC,IAEjCA,EAAEC,iBACFR,QAAQS,IAAIF,EAAEG,OAAOC,SAASC,OACzBpC,KAAAA,MAAQ+B,EAAEG,OAAOC,SAASC,MAAMnC,MACrCY,EAAQwB,UAAY,GAChB,KAAKrC,MACFY,KAAAA,SAASC,IAEdkB,EAAEG,OAAOC,SAASC,MAAME,UAAW,EACnCC,MAAO,2BAETV,EAAQW,UAIZC,gBAAgBC,EAAQ7B,GACtB6B,EAAOZ,iBAAiB,QAAS,KAC1B5B,KAAAA,KAAO,EACPU,KAAAA,SAASC,MA1EW,QAAA,QAAA;;AC2FjC,aA3FA,IAAA,EAAA,EAAA,QAAA,cACA,EAAA,EAAA,QAAA,eA0FA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAzFA,MAAM,YAAE1B,EAAF,KAAeG,EAAf,KAAqBC,GAAUoD,EAArC,QAEMjD,EAAY,4BAClB,IAAIC,EAAY,UAChB,MAAMiD,EAAW,2DACXhD,EAAU,CACdiD,QAAS,CACPC,cAAeF,IAIbG,EAAU,IAAIvD,EAAJ,QAAgBE,EAAUC,EAAUC,GACpD4B,QAAQC,IAAIsB,GACZA,EAAQnB,iBAAiBrC,EAAMD,GAC/ByD,EAAQN,gBAAgBtD,EAAaG;;ACdrC,aAFA,QAAA,oBACA,QAAA,wBACA,QAAA","file":"src.31b5bf98.js","sourceRoot":"../src","sourcesContent":["  \nexport default {\n    loadMoreBtn: document.getElementById('loadMore'),\n    list: document.getElementById('list'),\n    form: document.getElementById('form'),\n  }","export default class FetchObject {\n    constructor(BASE_URL, ednPoint, options) {\n      this.BASE_URL = BASE_URL\n      this.ednPoint = ednPoint\n      this.options = options\n      this._query = ''\n      this._page = 1\n      this.perPage = 5\n    }\n    get query() {\n      return this._query\n    }\n    set query(value) {\n      return (this._query = value)\n    }\n  \n    get page() {\n      return this._page\n    }\n    set page(value) {\n      return (this._page += value)\n    }\n    generateMarkup(array) {\n      return array\n        .map(elem => {\n          const {\n            photographer,\n            src: { tiny, original },\n          } = elem\n          return `\n    <li>\n      <img src=\"${tiny}\" data-src=\"${original}\" alt=\"${photographer}\" />\n    </li>\n    `\n        })\n        .join('')\n    }\n    getFetch(listRef) {\n      let params = `?query=${this._query}&per_page=${this.perPage}&page=${this._page}`\n      let url = this.BASE_URL + this.ednPoint + params\n      fetch(url, this.options)\n        .then(response => response.json())\n        .then(data => data.photos)\n        .then(array => {\n          let result = this.generateMarkup(array)\n          listRef.insertAdjacentHTML('beforeend', result)\n          console.log(result)\n        })\n        .catch(err => {\n          console.log(err)\n        })\n      //   .finally(() => formRef.reset())\n    }\n  \n    getFetchBySubmit(formRef, listRef) {\n      formRef.addEventListener('submit', e => {\n        // console.log(e)\n        e.preventDefault()\n        console.dir(e.target.elements.input)\n        this.query = e.target.elements.input.value // устанавливаем новое значение через setter\n        listRef.innerHTML = ''\n        if (this.query) {\n          this.getFetch(listRef)\n        } else {\n          e.target.elements.input.disabled = true\n          alert(`Enter the search value`)\n        }\n        formRef.reset()\n      })\n    }\n  \n    getFetchByClick(btnRef, listRef) {\n      btnRef.addEventListener('click', () => {\n        this.page = 1 // сеттер номера страницы\n        this.getFetch(listRef)\n      })\n    }\n  }","import refs from './refs.js';\nimport FetchObject from './class.js'\nconst { loadMoreBtn, list, form, } = refs;\n\nconst BASE_URL = `https://api.pexels.com/v1`\nlet ednPoint = `/search`\nconst API_KEY = `563492ad6f91700001000001390f9fee0a794c1182a72e49e0e0eae2`\nconst options = {\n  headers: {\n    Authorization: API_KEY,\n  },\n}\n\nconst myFetch = new FetchObject(BASE_URL, ednPoint, options)\nconsole.log(myFetch)\nmyFetch.getFetchBySubmit(form, list)\nmyFetch.getFetchByClick(loadMoreBtn, list)\n// form.addEventListener('submit', e => {\n//     e.preventDefault()\n//     console.log(e.target.elements.input.value)\n//     query = e.target.elements.input.value\n//     let params = `?query=${query}&per_page=5&page=${page}`\n//     let url = BASE_URL + ednPoint + params\n//     fetch(url, options)\n//         .then(response => {\n//             return response.json()\n//         })\n//         .then(data => {\n//             console.log(data.page, data.photos)\n//             return data.photos\n//         })\n//         .then(array => {\n//             //   console.log(array)\n//             let result = array\n//                 .map(elem => {\n\n//                     const {\n//                         photographer,\n//                         src: { tiny, original },\n//                     } = elem\n//                     return `\n//             <li>\n//              <img src=\"${tiny}\" data-src=\"${original}\" alt=\"${photographer}\" />\n//            </li>\n//              `\n//                 })\n//                 .join('')\n//             console.log(result)\n//             list.insertAdjacentHTML('beforeend', result)\n//         })\n//         .catch(err => {\n//             console.log(err)\n//         })\n//         .finally(() => form.reset())\n// })\n// loadMoreBtn.addEventListener('click', () => {\n//     page += 1;\n//     let params = `?query=${query}&per_page=5&page=${page}`;\n//     let url = BASE_URL + ednPoint + params;\n\n//     fetch(url, options)\n//         .then(response => {\n//             return response.json()\n//         })\n//         .then(data => {\n//             console.log(data.page, data.photos)\n//             return data.photos\n//         })\n//         .then(array => {\n//             //   console.log(array)\n//             let result = array\n//                 .map(elem => {\n\n//                     const {\n//                         photographer,\n//                         src: { tiny, original },\n//                     } = elem\n//                     return `\n//             <li>\n//              <img src=\"${tiny}\" data-src=\"${original}\" alt=\"${photographer}\" />\n//            </li>\n//              `\n//                 })\n//                 .join('')\n//             console.log(result)\n//             list.insertAdjacentHTML('beforeend', result)\n//         })\n//         .catch(err => {\n//             console.log(err)\n//         })\n//         .finally(() => form.reset())\n// })","import './sass/main.scss';\nimport './js/classicFetch.js';\nimport './js/class.js';"]}